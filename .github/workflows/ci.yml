name: Test et Validation de l'Infrastructure

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test-infrastructure:
    name: Test Fonctionnel de l'Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Création du fichier .env à partir de l'exemple
      run: cp .env.example .env
        
    - name: Démarrage de l'infrastructure Docker
      run: docker compose up -d --build
      
    - name: Attente active de la disponibilité de l'API
      run: |
        echo "Attente de l'endpoint /health (max 2 minutes)..."
        timeout 120s bash -c 'until curl -s --fail http://localhost:8003/health; do echo "En attente..."; sleep 5; done'
        
    - name: Exécution des tests d'intégration
      run: |
        chmod +x scripts/test-infrastructure.sh
        ./scripts/test-infrastructure.sh
        
    - name: Affichage du statut des services en cas de succès
      if: success()
      run: docker compose ps

    - name: Affichage des logs en cas d'échec
      if: failure()
      run: docker compose logs

  scan-securite:
    name: Scan de Sécurité des Vulnérabilités
    runs-on: ubuntu-latest
    needs: test-infrastructure
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Exécution du scanner de vulnérabilités Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Upload des résultats Trivy vers GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
